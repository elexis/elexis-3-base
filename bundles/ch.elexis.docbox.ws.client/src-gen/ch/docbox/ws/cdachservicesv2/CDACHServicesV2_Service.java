package ch.docbox.ws.cdachservicesv2;

import java.net.URL;

import javax.xml.namespace.QName;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.6.16
 * 2015-02-20T08:54:56.369+01:00
 * Generated source version: 2.6.16
 * 
 */
@WebServiceClient(name = "CDACHServicesV2", 
                  wsdlLocation = "rsc/wsdl/CDACHServicesV2Test.wsdl",
                  targetNamespace = "http://ws.docbox.ch/CDACHServicesV2/") 
public class CDACHServicesV2_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.docbox.ch/CDACHServicesV2/", "CDACHServicesV2");
    public final static QName CDACHServicesV2 = new QName("http://ws.docbox.ch/CDACHServicesV2/", "CDACHServicesV2");
    static {
        URL url = CDACHServicesV2_Service.class.getResource("rsc/wsdl/CDACHServicesV2Test.wsdl");
        if (url == null) {
            url = CDACHServicesV2_Service.class.getClassLoader().getResource("rsc/wsdl/CDACHServicesV2Test.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(CDACHServicesV2_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "rsc/wsdl/CDACHServicesV2Test.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public CDACHServicesV2_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CDACHServicesV2_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CDACHServicesV2_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CDACHServicesV2_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CDACHServicesV2_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public CDACHServicesV2_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns CDACHServicesV2
     */
    @WebEndpoint(name = "CDACHServicesV2")
    public CDACHServicesV2 getCDACHServicesV2() {
        return super.getPort(CDACHServicesV2, CDACHServicesV2.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CDACHServicesV2
     */
    @WebEndpoint(name = "CDACHServicesV2")
    public CDACHServicesV2 getCDACHServicesV2(WebServiceFeature... features) {
        return super.getPort(CDACHServicesV2, CDACHServicesV2.class, features);
    }

}
