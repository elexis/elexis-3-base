package ch.docbox.ws.cdachservices;

import java.net.URL;

import javax.xml.namespace.QName;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.7-b01- Generated
 * source version: 2.1
 *
 */
@WebServiceClient(name = "CDACHServices", targetNamespace = "http://ws.docbox.ch/CDACHServices/", wsdlLocation = "file:wsdl/CDACHServices.wsdl")
public class CDACHServices_Service extends Service {

	public final static URL CDACHSERVICES_WSDL_LOCATION;

	static {
		CDACHSERVICES_WSDL_LOCATION = CDACHServices_Service.class
				.getResource("/rsc/ch/docbox/ws/cdachservices/CDACHServices.wsdl");
	}

	private CDACHServices_Service(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public CDACHServices_Service() {
		super(CDACHSERVICES_WSDL_LOCATION, new QName("http://ws.docbox.ch/CDACHServices/", "CDACHServices"));
	}

	/**
	 *
	 * @return returns CDACHServices
	 */
	@WebEndpoint(name = "CDACHServices")
	public CDACHServices getCDACHServices() {
		ClassLoader tccl = Thread.currentThread().getContextClassLoader();

		Thread.currentThread().setContextClassLoader(Service.class.getClassLoader());
		CDACHServices port = super.getPort(new QName("http://ws.docbox.ch/CDACHServices/", "CDACHServices"),
				CDACHServices.class);
		Thread.currentThread().setContextClassLoader(tccl);

		return port;
	}

	/**
	 *
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *                 on the proxy. Supported features not in the
	 *                 <code>features</code> parameter will have their default
	 *                 values.
	 * @return returns CDACHServices
	 */
	@WebEndpoint(name = "CDACHServices")
	private CDACHServices getCDACHServices(WebServiceFeature... features) {
		return super.getPort(new QName("http://ws.docbox.ch/CDACHServices/", "CDACHServices"), CDACHServices.class,
				features);
	}

}
