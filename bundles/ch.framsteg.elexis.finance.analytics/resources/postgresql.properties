# /*******************************************************************************
# * Copyright 2024 Framsteg GmbH / olivier.debenath@framsteg.ch
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# * 
# *      http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *******************************************************************************/
# Grant Materialized View
# Mterialized View
tabbed.controller.materialized.view.detect= SELECT * FROM pg_matviews WHERE matviewname='ch_framsteg_elexis_analytics';
tabbed.controller.materialized.view.0.count=SELECT COUNT(*) FROM pg_matviews WHERE matviewname=''ch_framsteg_elexis_analytics_{0}'';
tabbed.controller.materialized.view.0.grant=GRANT SELECT ON ch_framsteg_elexis_analytics_{0} to {1};
tabbed.controller.materialized.view.0.refresh=REFRESH MATERIALIZED VIEW ch_framsteg_elexis_analytics_{0};
tabbed.controller.materialized.view.0.rm=DROP MATERIALIZED VIEW ch_framsteg_elexis_analytics;
tabbed.controller.materialized.view.0.create=CREATE MATERIALIZED VIEW ch_framsteg_elexis_analytics_{0} AS \
SELECT \
leistungen.id AS "delivery_id", \
behandlungen.id AS "treatment_id", \
behandlungen.fallid AS "case_id", \
COALESCE (rechnungsid, ''--'') AS "billing_id", \
TO_DATE (datum,''YYYYMMDD'') AS "treatment_date", \
EXTRACT(year from TO_DATE (datum,''YYYYMMDD''))::INTEGER as "treatment_year", \
EXTRACT(month from TO_DATE (datum,''YYYYMMDD''))::INTEGER as "treatment_month", \
EXTRACT(day from TO_DATE (datum,''YYYYMMDD''))::INTEGER as "treatment_day", \
DATE_PART(''week'' ,TO_DATE (datum,''YYYYMMDD''))::INTEGER as "treatment_week_of_year", \
EXTRACT(dow from TO_DATE (datum,''YYYYMMDD''))::INTEGER as "treatment_day_of_week", \
COALESCE (rechnungen.rnnummer, ''--'') as "billing_number", \
COALESCE (rechnungen.betrag::NUMERIC/100,0) as "billing_amount", \
kontakt.patientnr as "patient_nr", \
kontakt.bezeichnung1 as "patient_name", \
kontakt.bezeichnung2 as "patient_firstname", \
TO_DATE (kontakt.geburtsdatum,''YYYYMMDD'') AS "patient_birthdate", \
kontakt.geschlecht as "patient_sex", \
leistungen.leistg_txt as "delivery_description", \
leistungen.leistg_code as "delivery_code", \
CASE \
WHEN (leistungen.klasse=''ch.elexis.artikel_ch.data.MiGelArtikel'') THEN ''MiGel'' \
WHEN (leistungen.klasse=''ch.elexis.data.TarmedLeistung'') THEN ''Tarmed'' \
WHEN (leistungen.klasse=''ch.elexis.labortarif2009.data.Labor2009Tarif'') THEN ''Labor'' \
WHEN (leistungen.klasse=''ch.artikelstamm.elexis.common.ArtikelstammItem'') THEN ''Medikamente'' \
WHEN (leistungen.klasse=''ch.elexis.data.Eigenleistung'') THEN ''Eigenleistung'' \
WHEN (leistungen.klasse=''ch.elexis.data.PandemieLeistung'') THEN ''Pandemie'' \
WHEN (leistungen.klasse =''ch.elexis.core.eigenartikel.Eigenartikel'') THEN ''Eigenartikel'' \
ELSE ''--'' \
END AS "delivery_class", \
leistungen.vk_tp::integer AS "delivery_points", \
leistungen.zahl::numeric*(scale2::numeric/scale::numeric) AS "clearing_factor", \
leistungen.vk_scale::numeric AS "clearing_scale", \
ROUND((leistungen.zahl::NUMERIC * vk_tp::numeric *vk_scale::NUMERIC *(scale2::NUMERIC/scale::NUMERIC)/100),2) AS "clearing_price", \
faelle.gesetz as "legal_domain" \
FROM leistungen \
RIGHT OUTER JOIN behandlungen \
ON leistungen.behandlung=behandlungen.id \
LEFT JOIN faelle \
ON behandlungen.fallid=faelle.id \
LEFT JOIN rechnungen \
ON behandlungen.rechnungsid=rechnungen.id \
LEFT JOIN kontakt \
ON faelle.patientid=kontakt.id \
WHERE leistungen.id NOTNULL \
AND leistungen.deleted=''0'' \
AND behandlungen.mandantid=''{1}'' \
AND kontakt.patientnr!=''1'' \
AND kontakt.patientnr!=''3'';
# Select queries
# 1
tabbed.controller.sales.per.service.query.0=SELECT \
delivery_class, \
SUM(clearing_price) AS "amount" \
FROM ch_framsteg_elexis_analytics_{0} \
GROUP BY delivery_class \
ORDER BY SUM(clearing_price) DESC;
tabbed.controller.sales.per.service.query.1=SELECT \
delivery_class, \
SUM(clearing_price) AS "amount" \
FROM (SELECT delivery_class, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date) AS subquery \
GROUP BY delivery_class \
ORDER BY SUM(clearing_price) DESC;
tabbed.controller.sales.per.service.query.2=SELECT \
delivery_class, \
SUM(clearing_price) AS "amount" \
FROM (SELECT delivery_class, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' <= treatment_date) AS subquery \
GROUP BY delivery_class \
ORDER BY SUM(clearing_price) DESC;
tabbed.controller.sales.per.service.query.3=SELECT \
delivery_class, \
SUM(clearing_price) AS "amount" \
FROM (SELECT delivery_class, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date AND ''{2}'' <= treatment_date) AS subquery \
GROUP BY delivery_class \
ORDER BY SUM(clearing_price) DESC;
# 2
tabbed.controller.sales.per.service.year.query.0=SELECT \
delivery_class, \
treatment_year, \
SUM(clearing_price) AS "amount" \
FROM ch_framsteg_elexis_analytics_{0} \
GROUP BY delivery_class,treatment_year \
ORDER BY treatment_year DESC, delivery_class ASC;
tabbed.controller.sales.per.service.year.query.1=SELECT \
delivery_class, \
treatment_year, \
SUM(clearing_price) AS "amount" \
FROM (SELECT delivery_class,\
treatment_year, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date) AS subquery \
GROUP BY delivery_class,treatment_year \ \
ORDER BY treatment_year DESC, delivery_class ASC;
tabbed.controller.sales.per.service.year.query.2=SELECT \
delivery_class, \
treatment_year, \
SUM(clearing_price) AS "amount" \
FROM (SELECT delivery_class, \
treatment_year, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' <= treatment_date) AS subquery \
GROUP BY delivery_class,treatment_year \ \
ORDER BY treatment_year DESC, delivery_class ASC;
tabbed.controller.sales.per.service.year.query.3=SELECT \
delivery_class, \
treatment_year, \
SUM(clearing_price) AS "amount" \
FROM (SELECT delivery_class, \
treatment_year, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date AND ''{2}'' <= treatment_date) AS subquery \
GROUP BY delivery_class,treatment_year \
ORDER BY treatment_year DESC, delivery_class ASC;
# 3
tabbed.controller.sales.per.service.year.month.query.0=SELECT \
delivery_class, \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM ch_framsteg_elexis_analytics_{0} \
GROUP BY delivery_class,treatment_year,treatment_month \
ORDER BY treatment_year DESC,treatment_month DESC, delivery_class ASC;
tabbed.controller.sales.per.service.year.month.query.1=SELECT \
delivery_class, \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT delivery_class, \
treatment_year, \
treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date) AS subquery \
GROUP BY delivery_class,treatment_year,treatment_month \
ORDER BY treatment_year DESC,treatment_month DESC, delivery_class ASC;
tabbed.controller.sales.per.service.year.month.query.2=SELECT \
delivery_class, \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT delivery_class, \
treatment_year, \
treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' <= treatment_date) AS subquery \
GROUP BY delivery_class,treatment_year,treatment_month \
ORDER BY treatment_year DESC,treatment_month DESC, delivery_class ASC;
tabbed.controller.sales.per.service.year.month.query.3=SELECT \
delivery_class, \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT delivery_class, \
treatment_year, \
treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date AND ''{2}'' <= treatment_date) AS subquery \
GROUP BY delivery_class,treatment_year,treatment_month \
ORDER BY treatment_year DESC,treatment_month DESC, delivery_class ASC;
# 4
tabbed.controller.sales.per.year.query.0=SELECT \
treatment_year, \
SUM(clearing_price) AS "amount" \
FROM ch_framsteg_elexis_analytics_{0} \
GROUP BY treatment_year \
ORDER BY treatment_year DESC; 
tabbed.controller.sales.per.year.query.1=SELECT \
treatment_year, \
SUM(clearing_price) AS "amount" \
FROM (SELECT treatment_year, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date) AS subquery \
GROUP BY treatment_year \
ORDER BY treatment_year DESC; 
tabbed.controller.sales.per.year.query.2=SELECT \
treatment_year, \
SUM(clearing_price) AS "amount" \
FROM (SELECT treatment_year, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' <= treatment_date) AS subquery \
GROUP BY treatment_year \
ORDER BY treatment_year DESC; 
tabbed.controller.sales.per.year.query.3=SELECT \
treatment_year, \
SUM(clearing_price) AS "amount" \
FROM (SELECT treatment_year, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date AND ''{2}'' <= treatment_date) AS subquery \
GROUP BY treatment_year \
ORDER BY treatment_year DESC;
# 5
tabbed.controller.sales.per.year.month.query.0=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM ch_framsteg_elexis_analytics_{0} \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC,treatment_month DESC;
tabbed.controller.sales.per.year.month.query.1=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT  treatment_year, treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date) AS subquery \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC,treatment_month DESC;
tabbed.controller.sales.per.year.month.query.2=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT  treatment_year, treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' <= treatment_date) AS subquery \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC,treatment_month DESC;
tabbed.controller.sales.per.year.month.query.3=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT  treatment_year, treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date AND ''{2}'' <= treatment_date) AS subquery  \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC,treatment_month DESC;
# 6
tabbed.controller.tarmed.per.year.month.query.0=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM ch_framsteg_elexis_analytics_{0} \
GROUP BY treatment_year, treatment_month,delivery_class \
HAVING delivery_class=''{1}'' \
ORDER BY treatment_year DESC, treatment_month DESC;
tabbed.controller.tarmed.per.year.month.query.1=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT  treatment_year, treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date AND delivery_class=''{2}'') AS subquery \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC;
tabbed.controller.tarmed.per.year.month.query.2=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT  treatment_year, treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' <= treatment_date AND delivery_class=''{2}'') AS subquery \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC; 
tabbed.controller.tarmed.per.year.month.query.3=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT  treatment_year, treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date AND ''{2}'' <= treatment_date AND delivery_class=''{3}'') AS subquery  \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC;
# 7
tabbed.controller.medical.per.year.month.query.0=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM ch_framsteg_elexis_analytics_{0} \
GROUP BY treatment_year, treatment_month,delivery_class \
HAVING delivery_class=''{1}'' \
ORDER BY treatment_year DESC, treatment_month DESC;
tabbed.controller.medical.per.year.month.query.1=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT  treatment_year, treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date AND delivery_class=''{2}'') AS subquery \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC;
tabbed.controller.medical.per.year.month.query.2=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT  treatment_year, treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' <= treatment_date AND delivery_class=''{2}'') AS subquery \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC; 
tabbed.controller.medical.per.year.month.query.3=SELECT \
treatment_year, \
treatment_month, \
SUM(clearing_price) AS "amount" \
FROM (SELECT  treatment_year, treatment_month, \
clearing_price \
FROM ch_framsteg_elexis_analytics_{0} WHERE ''{1}'' >= treatment_date AND ''{2}'' <= treatment_date AND delivery_class=''{3}'') AS subquery  \
GROUP BY treatment_year, treatment_month \
ORDER BY treatment_year DESC;
# 8
tabbed.controller.daily.report.query.0=SELECT \
treatment_date, \
patient_nr, \
patient_name, \
patient_firstname, \
patient_sex, \
billing_number, \
billing_amount, \
delivery_class, \
delivery_description, \
delivery_points, \
clearing_factor, \
clearing_scale, \
clearing_price, \
delivery_code, \
treatment_id, \
case_id, \
billing_id, \
delivery_id, \
patient_birthdate \
FROM ch_framsteg_elexis_analytics_{0} \
ORDER BY treatment_year DESC, \
treatment_month DESC, \
treatment_day DESC, \
patient_name  DESC;
tabbed.controller.daily.report.query.1=SELECT \
treatment_date, \
patient_nr, \
patient_name, \
patient_firstname, \
patient_sex, \
billing_number, \
billing_amount, \
delivery_class, \
delivery_description, \
delivery_points, \
clearing_factor, \
clearing_scale, \
clearing_price, \
delivery_code, \
treatment_id, \
case_id, \
billing_id, \
delivery_id, \
patient_birthdate \
FROM ch_framsteg_elexis_analytics_{0} \
WHERE ''{1}'' >= treatment_date \
ORDER BY treatment_year DESC, \
treatment_month DESC, \
treatment_day DESC, \
patient_name  DESC;
tabbed.controller.daily.report.query.2=SELECT \
treatment_date, \
patient_nr, \
patient_name, \
patient_firstname, \
patient_sex, \
billing_number, \
billing_amount, \
delivery_class, \
delivery_description, \
delivery_points, \
clearing_factor, \
clearing_scale, \
clearing_price, \
delivery_code, \
treatment_id, \
case_id, \
billing_id, \
delivery_id, \
patient_birthdate \
FROM ch_framsteg_elexis_analytics_{0} \
WHERE ''{1}'' <= treatment_date \
ORDER BY treatment_year DESC, \
treatment_month DESC, \
treatment_day DESC, \
patient_name  DESC;
tabbed.controller.daily.report.query.3=SELECT \
treatment_date, \
patient_nr, \
patient_name, \
patient_firstname, \
patient_sex, \
billing_number, \
billing_amount, \
delivery_class, \
delivery_description, \
delivery_points, \
clearing_factor, \
clearing_scale, \
clearing_price, \
delivery_code, \
treatment_id, \
case_id, \
billing_id, \
delivery_id, \
patient_birthdate \
FROM ch_framsteg_elexis_analytics_{0} \
WHERE ''{1}'' >= treatment_date AND ''{2}'' <= treatment_date \
ORDER BY treatment_year DESC, \
treatment_month DESC, \
treatment_day DESC, \
patient_name  DESC;
