# /*******************************************************************************
# * Copyright 2024 Framsteg GmbH / olivier.debenath@framsteg.ch
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# * 
# *      http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *******************************************************************************/
props.app.xid.costbearer.ean.domain=www.xid.ch/id/ean
props.app.xid.ahv.domain=www.ahv.ch/xid
props.app.xid.insured.person.number=www.xid.ch/framsteg/covercard/insured-person-number
props.app.xid.insured.number=www.xid.ch/framsteg/covercard/insured-number

props.app.message.parametrizeable=<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://microsoft.com/webservices/">\
   <soap:Body>\
      <web:Authenticate>\
			<web:oeCrossAuthRequest>\
				<web:authRequest>\
					<web:timeStamp>{0}</web:timeStamp>\
					<web:clientType>{1}</web:clientType>\
					<web:serialNum>{2}</web:serialNum>\
					<web:userLogin>{3}</web:userLogin>\
					<web:userPassword>{4}</web:userPassword>\
					<web:clientIP>{5}</web:clientIP>\
					<web:clientHash>{6}</web:clientHash>\
					<web:signature>{7}</web:signature>\
				</web:authRequest>\
				<web:language>{8}</web:language>\
				<web:extraDataFormat>{9}</web:extraDataFormat>\
				<web:extraDataBlock>{10}</web:extraDataBlock>\
			</web:oeCrossAuthRequest>\
		</web:Authenticate>\
	</soap:Body>\
</soap:Envelope>\

props.app.teamw.config.path=/opt/elexis/teamw/teamw.properties

props.app.log.unsigned.hashed.signature=Printing unsigned hashed signature
props.app.log.unsigned.unhashed.signature=Printing unsigned unhashed signature

props.app.key.factory.type=RSA
props.app.signature.type=SHA1withRSA

props.app.date.time.pattern.simple=yyyyMMddHHmmssSSS000
props.app.date.time.pattern.utc=yyyy-MM-dd'T'HH:mm:ss.SSSXXX

# Use true either false
props.app.use.internal.browser=true

props.app.msg.message.built=Message built
props.app.msg.message.sent=Message sent

props.app.err.client.protocol.exception=Signals an error in the HTTP protocol
props.app.err.unsupported.operation.exception=Thrown to indicate that the requested operation is not supported
props.app.err.io.exception=Signals that an I/O exception of some sort has occurred
props.app.err.parser.configuration.exception=Signals a parser configuration problem that prevents a parser factory object from creating a parser object
props.app.err.sax.exception=Signals a problem while parsing an XML document
props.app.err.uri.syntax.exception=Checked exception thrown to indicate that a string could not be parsed as a URI reference
props.app.err.transformer.exception=A transformer exception due to exceptional condition that occurred during the transformation process
props.app.err.invalid.key.exception=An invalid key (invalid encoding, wrong length, uninitialized, etc) exception has occured
props.app.err.no.such.algorithm.exception=A particular cryptographic algorithm is requested but is not available in the environment
props.app.err.invalid.key.spec.exception=A invalid key specification has occured
props.app.err.signature.exception=A generic signature exception has occured